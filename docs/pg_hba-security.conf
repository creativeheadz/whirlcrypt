# PostgreSQL Client Authentication Configuration (pg_hba.conf)
# Security-hardened template for Whirlcrypt application
# 
# This file controls: which hosts are allowed to connect, how clients
# are authenticated, which PostgreSQL user names they can use, which
# databases they can access.

# =============================================================================
# SECURITY PRINCIPLES APPLIED:
# =============================================================================
# 1. Principle of least privilege - minimal access required
# 2. SSL/TLS encryption enforced for all connections
# 3. Specific IP restrictions where possible
# 4. Strong authentication methods only
# 5. No trust authentication in production

# =============================================================================
# CONNECTION TYPE DEFINITIONS:
# =============================================================================
# local      = Unix domain socket connections
# host       = TCP/IP connections (encrypted and unencrypted)
# hostssl    = TCP/IP connections (SSL encrypted only)
# hostnossl  = TCP/IP connections (unencrypted only) - AVOID IN PRODUCTION

# =============================================================================
# PRODUCTION CONFIGURATION (RECOMMENDED)
# =============================================================================

# Local connections for administrative tasks (Unix socket)
# Allow postgres superuser for maintenance via local socket only
local   all             postgres                                peer

# Application connections (SSL required)
# Whirlcrypt application user - restrict to localhost with SSL
hostssl whirlcrypt_dev  whirlcrypt_user  127.0.0.1/32          scram-sha-256
hostssl whirlcrypt_dev  whirlcrypt_user  ::1/128               scram-sha-256

# Admin connections (SSL required)
# Database admin user for remote administration
hostssl whirlcrypt_dev  whirlcrypt_admin 127.0.0.1/32         scram-sha-256
hostssl whirlcrypt_dev  whirlcrypt_admin ::1/128              scram-sha-256

# Backup user (if using dedicated backup user)
hostssl whirlcrypt_dev  whirlcrypt_backup 127.0.0.1/32        scram-sha-256

# =============================================================================
# DEVELOPMENT CONFIGURATION (LESS SECURE - DEV ONLY)
# =============================================================================
# Uncomment these lines for development environments only
# Comment out the production lines above when using these

# Local development - allow password authentication for convenience
# host    whirlcrypt_dev  whirlcrypt_user  127.0.0.1/32          scram-sha-256
# host    whirlcrypt_dev  whirlcrypt_user  ::1/128               scram-sha-256

# =============================================================================
# NETWORK ACCESS (CONFIGURE CAREFULLY)
# =============================================================================
# If you need to allow connections from specific networks, use these templates:

# Allow from specific server IP (replace with your server's IP)
# hostssl whirlcrypt_dev  whirlcrypt_user  192.168.1.100/32      scram-sha-256

# Allow from private network (be very careful with this)
# hostssl whirlcrypt_dev  whirlcrypt_user  192.168.1.0/24        scram-sha-256

# =============================================================================
# DENY ALL OTHER CONNECTIONS
# =============================================================================
# This should be the last line - denies all other connection attempts
# Remove this line only if you need broader access (not recommended)

# Deny all other connections
host    all             all             all                     reject

# =============================================================================
# SECURITY NOTES:
# =============================================================================
# 1. Order matters - first matching rule is used
# 2. Always use 'hostssl' instead of 'host' in production
# 3. Use specific IP addresses/ranges instead of 'all'
# 4. Use 'scram-sha-256' authentication method (strongest available)
# 5. Avoid 'trust' authentication method in production
# 6. Test configuration changes carefully
# 7. Monitor authentication logs for failed attempts
# 8. Consider using certificate authentication for highest security

# =============================================================================
# IMPLEMENTATION STEPS:
# =============================================================================
# 1. Backup current pg_hba.conf file
# 2. Replace with this configuration
# 3. Adjust IP addresses for your environment
# 4. Reload PostgreSQL configuration: sudo systemctl reload postgresql
# 5. Test connections to ensure they work
# 6. Monitor logs for authentication attempts

# =============================================================================
# CERTIFICATE AUTHENTICATION (ADVANCED)
# =============================================================================
# For highest security, consider certificate-based authentication:
# hostssl whirlcrypt_dev  whirlcrypt_user  127.0.0.1/32          cert clientcert=1

# This requires:
# 1. Client certificates for each user
# 2. Proper certificate authority setup
# 3. Certificate management procedures
